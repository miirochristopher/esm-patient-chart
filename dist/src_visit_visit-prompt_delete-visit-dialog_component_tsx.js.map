{"version":3,"file":"src_visit_visit-prompt_delete-visit-dialog_component_tsx.js","mappings":"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","sources":["webpack://@openmrs/esm-patient-chart-app/./src/visit/hooks/useDeleteVisit.hook.tsx","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-prompt/delete-visit-dialog.component.tsx"],"sourcesContent":["import { type Visit, showActionableNotification, showSnackbar, useVisit } from '@openmrs/esm-framework';\nimport { deleteVisit, restoreVisit, useVisits } from '../visits-widget/visit.resource';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\n\nexport function useDeleteVisit(patientUuid: string, visit: Visit, onVisitDelete = () => {}, onVisitRestore = () => {}) {\n  const { mutateVisits } = useVisits(patientUuid);\n  const { mutate: mutateCurrentVisit } = useVisit(patientUuid);\n  const [isDeletingVisit, setIsDeletingVisit] = useState(false);\n  const { t } = useTranslation();\n\n  const restoreDeletedVisit = () => {\n    restoreVisit(visit?.uuid)\n      .then(() => {\n        showSnackbar({\n          title: t('visitRestored', 'Visit restored'),\n          subtitle: t('visitRestoredSuccessfully', '{{visit}} restored successfully', {\n            visit: visit?.visitType?.display ?? t('visit', 'Visit'),\n          }),\n          kind: 'success',\n        });\n        mutateVisits();\n        mutateCurrentVisit();\n        onVisitRestore?.();\n      })\n      .catch(() => {\n        showSnackbar({\n          title: t('visitNotRestored', \"Visit couldn't be restored\"),\n          subtitle: t('errorWhenRestoringVisit', 'Error occured when restoring {{visit}}', {\n            visit: visit?.visitType?.display ?? t('visit', 'Visit'),\n          }),\n          kind: 'error',\n        });\n      });\n  };\n\n  const initiateDeletingVisit = () => {\n    setIsDeletingVisit(true);\n    const isCurrentVisitDeleted = !visit?.stopDatetime; // True if it's an active visit\n\n    deleteVisit(visit?.uuid)\n      .then(() => {\n        mutateVisits();\n        mutateCurrentVisit();\n        // TODO: Needs to be replaced with Actionable Snackbar when Actionable\n        if (!isCurrentVisitDeleted) {\n          showActionableNotification({\n            title: t('visitDeleted', '{{visit}} deleted', {\n              visit: visit?.visitType?.display ?? t('visit', 'Visit'),\n            }),\n            subtitle: t('visitDeletedSuccessfully', '{{visit}} deleted successfully', {\n              visit: visit?.visitType?.display ?? t('visit', 'Visit'),\n            }),\n            kind: 'success',\n            actionButtonLabel: t('undo', 'Undo'),\n            onActionButtonClick: restoreDeletedVisit,\n          });\n        } else {\n          showSnackbar({\n            title: t('visitCancelled', 'Visit cancelled'),\n            subtitle: t('visitCancelSuccessMessage', 'Active {{visit}} cancelled successfully', {\n              visit: visit?.visitType?.display ?? t('visit', 'Visit'),\n            }),\n            isLowContrast: true,\n            kind: 'success',\n          });\n        }\n        onVisitDelete?.();\n      })\n      .catch(() => {\n        showSnackbar({\n          title: isCurrentVisitDeleted\n            ? t('errorCancellingVisit', 'Error cancelling active visit')\n            : t('errorDeletingVisit', 'Error deleting visit'),\n          kind: 'error',\n          subtitle: t('errorOccuredDeletingVisit', 'An error occured when deleting visit'),\n        });\n      })\n      .finally(() => {\n        setIsDeletingVisit(false);\n      });\n  };\n\n  return {\n    initiateDeletingVisit,\n    isDeletingVisit,\n  };\n}\n","import React from 'react';\nimport { Button, ModalHeader, ModalBody, ModalFooter, InlineLoading } from '@carbon/react';\nimport { useTranslation } from 'react-i18next';\nimport { type Visit, formatDatetime } from '@openmrs/esm-framework';\nimport styles from './start-visit-dialog.scss';\nimport { useDeleteVisit } from '../hooks/useDeleteVisit.hook';\n\ninterface DeleteVisitDialogProps {\n  closeModal: () => void;\n  patientUuid: string;\n  visit: Visit;\n}\n\nconst DeleteVisitDialog: React.FC<DeleteVisitDialogProps> = ({ closeModal, patientUuid, visit }) => {\n  const { t } = useTranslation();\n  const { isDeletingVisit, initiateDeletingVisit } = useDeleteVisit(patientUuid, visit, closeModal);\n\n  return (\n    <div>\n      <ModalHeader\n        closeModal={closeModal}\n        label={t('visit', 'Visit')}\n        title={t('deleteVisitDialogHeader', 'Are you sure you want to delete this visit?')}\n      />\n      <ModalBody>\n        <p className={styles.body}>\n          {t(\n            'confirmDeletingVisitTextWithStartAndEndDate',\n            'Are you sure you want to delete {{visit}} which started {{visitStartDate}} and ended {{visitEndDate}}?',\n            {\n              visit: visit?.visitType?.display ?? t('visit', 'Visit'),\n              visitStartDate: formatDatetime(new Date(visit?.startDatetime), {\n                mode: 'standard',\n              }),\n              visitEndDate: formatDatetime(new Date(visit?.stopDatetime), {\n                mode: 'standard',\n              }),\n            },\n          )}\n          <br />\n          {t('deletingVisitWillDeleteEncounters', 'Deleting this visit will delete all associated encounters.')}\n        </p>\n      </ModalBody>\n      <ModalFooter>\n        <Button kind=\"secondary\" onClick={closeModal}>\n          {t('cancel', 'Cancel')}\n        </Button>\n        <Button kind=\"danger\" onClick={initiateDeletingVisit} disabled={isDeletingVisit}>\n          {!isDeletingVisit ? (\n            t('deleteVisit', 'Delete visit')\n          ) : (\n            <InlineLoading description={t('deletingVisit', 'Deleting visit')} />\n          )}\n        </Button>\n      </ModalFooter>\n    </div>\n  );\n};\n\nexport default DeleteVisitDialog;\n"],"names":["showActionableNotification","showSnackbar","useVisit","deleteVisit","restoreVisit","useVisits","useTranslation","useState","useDeleteVisit","patientUuid","visit","onVisitDelete","onVisitRestore","mutateVisits","mutate","mutateCurrentVisit","isDeletingVisit","setIsDeletingVisit","t","restoreDeletedVisit","uuid","then","title","subtitle","visitType","display","kind","catch","initiateDeletingVisit","isCurrentVisitDeleted","stopDatetime","actionButtonLabel","onActionButtonClick","isLowContrast","finally","React","Button","ModalHeader","ModalBody","ModalFooter","InlineLoading","formatDatetime","styles","DeleteVisitDialog","closeModal","div","label","p","className","body","visitStartDate","Date","startDatetime","mode","visitEndDate","br","onClick","disabled","description"],"sourceRoot":""}